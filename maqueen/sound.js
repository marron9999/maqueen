var SOUND = {
	label: [
		["ド", "ド#", "レ", "レ#", "ミ", "ファ", "ファ#", "ソ", "ソ#", "ラ", "ラ#", "シ"],
		["ド", "ド#", "レ", "レ#", "ミ", "ファ", "ファ#", "ソ", "ソ#", "ラ", "ラ#", "シ"],
		["ド", "ド#", "レ", "レ#", "ミ", "ファ", "ファ#", "ソ", "ソ#", "ラ", "ラ#", "シ"],
	],
	value: [
		[131, 139, 147, 156, 165, 175, 185, 196, 208, 220, 233, 247],
		[262, 277, 294, 311, 330, 349, 370, 392, 415, 440, 466, 498],
		[523, 554, 587, 622, 659, 698, 740, 784, 831, 880, 932, 988],
	],

	"チューリップ": [
		"ドレミー ドレミー ソミレド レミレー",
		"ドレミー ドレミー ソミレド レミドー",
		"ソソミソ ララソー ミミレレ ドー",
	],

	"どんぐりころころ": [
		"ソ.ミ.ミ .ファ.ミ.レ.ド＿",
		".ソ.ソ.ミ.ミ レ＿",
		".ミ.ミ.ソ.ソ .ラ.ラ.ラ.ラ",
		"^.ド^.ド.ミ.ミ ソ＿",
		".ソ.ミ.ミ .ファ.ミ.レ.ド",
		".ソ.ソ.ミ.ミ レ＿",
		".ソ.ソ.ミ.ミ .ラ.ラ.ソ.ソ",
		".ラ.ラ.シ.シ ^ド",
	],

	"静かな湖畔": [
		"ド.ドド.レ ミ.ミミ.ミ レドレ.ミ ドー_ソー",
		"ミ.ミミ.ファ ソ.ソソ.ソ ファ.ミファ.ソ ミー＿.ソ",
		"ミー＿.ソ ミー＿.ソ ミ.ソミ.ソ ミー",
	],

	"さくらさくら": [
		"ララシー ララシー ラシドシ ラ.シ.ラファ",
		"ミドミファ ミ.ミ.ドシー ラシドシ ラ.シ.ラファ",
		"ミドミファ ミ.ミ.ドシー ララシー ララシー",
		"ミファ.シ.ラファ ミー",
	],

	//	"パプリカ": [
	//		"ド＿ミソ ドラシ.ミ.ソ ラファソー",
	//		"ファラシソ.ソ.ファ ミ#ソラシ ドラシ.ソ.ソ",
	//		".ラ.ド.シ.ソミミ .ファ.ミ.レ.ミラ#ソファソラー＿.#ファ.ラ",
	//	],

	//	"紅蓮華": [
	//		".レ.レレシ .ラ.シ.レ.シ.ラ:シ:シ_ソ",
	//		":ラ:シ:レ:シ:ラ:シ:シ_レ",
	//		":れ:そ:ソ.ソ.レ:レ:ソ:ラ:ソ レド.シ.ラ.ソ.ソ",
	//		"ソ:ソ:ラ:シ:ラ .レ.ラ:ラ:シ:レ:ラ",
	//	],

	playList: function() {
		return ["チューリップ", "どんぐりころころ",
				"静かな湖畔", "さくらさくら"];
	},
	play2List: function() {
		return [["クスクス笑う", "giggle"], ["ハッピー", "happy"],
				["ハロー", "hello"], ["神秘的", "mysterious"],
				["寂しい", "sad"], ["スライド", "slide"],
				["急上昇", "soaring"], ["春", "spring"],
				["きらめく", "twinkle"], ["あくび", "yawn"],];
	},

	values: function (data) {
		let val = [], len = [], key = [];
		let base = 1, short = 0, shift = 0;
		for (let i = 0; i < data.length; i++) {
			val[i] = []; len[i] = []; key[i] = [];
			for (let j = 0; j < data[i].length; j++) {
				val[i][j] = 0; len[i][j] = 0; key[i][j] = -1;
				let c = data[i].charAt(j);
				if (c == "_") { base = 0; continue; }
				if (c == "^") { base = 2; continue; }
				if (c == ".") { short = 2; continue; }
				if (c == ":") { short = 1; continue; }
				if (c == "#") { shift = 1; continue; }
				if (c == " ") { continue; }
				if (c == "ァ") { continue; }
				if (c == "＿") { len[i][j] = 4; continue; }
				if (c == "_") { len[i][j] = 2; continue; }
				if (c == "ー") { key[i][j] = -2; continue; }
				for (let k = 0; k < this.label[base].length; k++) {
					if (c == this.label[base][k].charAt(0)) {
						if (shift > 0) {
							if (this.label[base][k].indexOf("#") < 0) continue;
						}
						val[i][j] = this.value[1][k];
						key[i][j] = ("" + base) + k;
						len[i][j] = (short > 0) ? short : 4;
						break;
					}
				}
				base = 1;
				short = 0;
				shift = 0;
			}
			for (let j = key[i].length - 1; j >= 0; j--) {
				if (key[i][j] == -2) {
					len[i][j - 1] *= 2;
					len[i][j] = 0;
					key[i][j] = -1;
				}
			}
		}
		return { val: val, len: len, key: key };
	},
};
